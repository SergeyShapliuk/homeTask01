import express from "express";
import {setupApp} from "./setup-app";
import {SETTINGS} from "./core/settings/settings";
import {runDB} from "./db/db";
import dotenv from 'dotenv';
import lt from 'localtunnel';

dotenv.config();

let isInitialized = false;
let appInstance: express.Application;

export const initApp = async () => {
    if (!isInitialized) {
        const app = express();
        setupApp(app);

        console.log("üîÑ Connecting to database...");
        await runDB(SETTINGS.MONGO_URL);
        console.log("‚úÖ Database connected");

        appInstance = app;
        isInitialized = true;

        // ‚úÖ –í–ê–ñ–ù–û: –ù–∞ Render –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ—Ä—Ç –∏–∑ process.env.PORT
        const PORT = process.env.PORT || SETTINGS.PORT;

        // ‚úÖ –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É–∫–∞–∑—ã–≤–∞–µ–º '0.0.0.0' –¥–ª—è Render
        if (process.env.NODE_ENV === "production") {
            // –î–ª—è Render: —Å–ª—É—à–∞–µ–º –Ω–∞ 0.0.0.0
            app.listen(Number(PORT), "0.0.0.0", () => {
                console.log(`üöÄ Production server listening on port ${PORT}`);
            });
        } else {
            // ‚úÖ –°–Ω–∞—á–∞–ª–∞ –∑–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
            app.listen(Number(PORT), () => {
                console.log(`üöÄ Development server listening on port ${PORT}`);

                // ‚úÖ –ü–æ—Ç–æ–º –∑–∞–ø—É—Å–∫–∞–µ–º —Ç—É–Ω–µ–ª—å (–ø–æ—Å–ª–µ —Å—Ç–∞—Ä—Ç–∞ —Å–µ—Ä–≤–µ—Ä–∞)
                lt({ port: Number(PORT) }).then(tunnel => {
                    console.log(`üåê External URL: ${tunnel.url}`);
                }).catch(error => {
                    console.log('Tunnel failed:', error.message);
                });
            });
            // try {
            //     const tunnelUrl = await TunnelService.start(5001);
            //     console.log(`üåê External HTTPS URL: ${tunnelUrl}`);
            // } catch (error) {
            //     console.log('Ngrok not available, using localhost only');
            // }
            // –î–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏: –±–µ–∑ —É–∫–∞–∑–∞–Ω–∏—è host
            // app.listen(Number(PORT), () => {
            //     console.log(`üöÄ Development server listening on port ${PORT}`);
            // });
        }
    }

    return appInstance;
};

// ‚úÖ –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
export default initApp();

// ‚úÖ –í—Å–µ–≥–¥–∞ –∑–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
initApp().catch(console.error);
