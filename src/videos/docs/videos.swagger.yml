tags:
  - name: Videos
    description: API for managing videos

paths:
  /api/drivers:
    get:
      summary: Get a list of all videos
      tags: [ Videos ]
      security:
        - BasicAuth: [ ]
      responses:
        200:
          description: List of all videos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoListOutput'
    post:
      summary: Add a new videos
      tags: [ Videos ]
      security:
        - BasicAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VideoInput'
      responses:
        201:
          description: The video was successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoOutput'
        400:
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'

  /api/videos/{id}:
    get:
      summary: Get a video by ID
      tags: [ Videos ]
      security:
        - BasicAuth: [ ]
      parameters:
        - in: path
          name: id
          required: true
          description: "The unique identifier of the video"
          schema:
            type: integer
            example: 2
      responses:
        200:
          description: The requested driver
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoOutput'
        404:
          description: Video not found
    put:
      summary: Update a video by ID
      tags: [ Videos ]
      security:
        - BasicAuth: [ ]
      parameters:
        - in: path
          name: id
          required: true
          description: "The unique identifier of the video"
          schema:
            type: integer
            example: 2
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VideoUpdateInput'
      responses:
        204:
          description: Video updated successfully
        400:
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'
        404:
          description: Video not found
    delete:
      summary: Delete a video by ID
      tags: [ Videos ]
      security:
        - BasicAuth: [ ]
      parameters:
        - in: path
          name: id
          required: true
          description: "The unique identifier of the video"
          schema:
            type: integer
            example: 2
      responses:
        204:
          description: Driver deleted successfully
        404:
          description: Video not found
components:
  schemas:
    Video:
      type: object
      required:
        - id
        - title
        - author
        - canBeDownloaded
        - minAgeRestriction
        - createdAt
        - publicationDate
        - availableResolutions
      properties:
        id:
          type: integer
          description: "The unique identifier for the video"
          example: 2
        title:
          type: string
          description: "The title of the video"
          example: "Tom Rider"
        author:
          type: string
          description: "The author video"
          example: "Tom"
        canBeDownloaded:
          type: boolean
          description: "canBeDownloaded"
          example: "false"
        minAgeRestriction:
          type: string
          description: "string"
          example: "string"
        createdAt:
          type: string
          format: date-time
          description: "The date and time when the video was created"
          example: "2023-03-05T12:00:00Z"
        publicationDate:
          type: string
          format: date-time
          description: "The date and time when the video was published"
          example: "2023-03-05T12:00:00Z"
        availableResolutions:
          type: [ string ]
          description: "Required resolution"
          example: "[ P144, P240, P360, P480, P720, P1080, P1440, P2160 ]"

    VideoInput:
      type: object
      required: [ data ]
      properties:
        data:
          type: object
          required: [ type, attributes ]
          properties:
            type:
              type: string
              enum: [ Drivers ]
            attributes:
              $ref: '#/components/schemas/DriverAttributes'
    DriverUpdateInput:
      type: object
      required: [ data ]
      properties:
        data:
          type: object
          required: [ type, id, attributes ]
          properties:
            type:
              type: string
              enum: [ Drivers ]
            id:
              type: string
              example: 5f1a2b3c4d5e6f7g8h9i0j1k2
            attributes:
              $ref: '#/components/schemas/DriverAttributes'
    DriverOutput:
      type: object
      required:
        - data
      properties:
        data:
          type: object
          required:
            - type
            - id
            - attributes
          properties:
            type:
              type: string
              enum: [ drivers ]
              example: drivers
            id:
              type: string
              example: 5f1a2b3c4d5e6f7g8h9i0j1k2
            attributes:
              $ref: '#/components/schemas/DriverAttributes'
    DriverListOutput:
      type: object
      required: [ meta, data ]
      properties:
        meta:
          type: object
        data:
          type: array
          items:
            $ref: '#/components/schemas/DriverData'
    ValidationError:
      type: object
      properties:
        field:
          type: string
          example: "name"
        message:
          type: string
          example: "Invalid name"
    ValidationErrorResponse:
      type: object
      properties:
        errorMessages:
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
